//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nDocumentApproval {
	using System;
	
	
	internal partial class DocumentApprovalDataContext : Microsoft.SharePoint.Linq.DataContext {
		
		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion
		
		public DocumentApprovalDataContext(string requestUrl) : 
				base(requestUrl) {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="DAApprovalHistory")]
		public Microsoft.SharePoint.Linq.EntityList<DAApprovalHistoryModel> DAApprovalHistory {
			get {
				return this.GetList<DAApprovalHistoryModel>("DAApprovalHistory");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="DAAttachments")]
		public Microsoft.SharePoint.Linq.EntityList<DAAttachmentsDocument> DAAttachments {
			get {
				return this.GetList<DAAttachmentsDocument>("DAAttachments");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="DAReviewer")]
		public Microsoft.SharePoint.Linq.EntityList<DAReviewerModel> DAReviewer {
			get {
				return this.GetList<DAReviewerModel>("DAReviewer");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="DAReviewerAction")]
		public Microsoft.SharePoint.Linq.EntityList<DAReviewerActionModel> DAReviewerAction {
			get {
				return this.GetList<DAReviewerActionModel>("DAReviewerAction");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="DefaultReviewer")]
		public Microsoft.SharePoint.Linq.EntityList<DefaultReviewer> DefaultReviewer {
			get {
				return this.GetList<DefaultReviewer>("DefaultReviewer");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="DocumentApprovalWorkflow")]
		public Microsoft.SharePoint.Linq.EntityList<DocumentApprovalModel> DocumentApprovalWorkflow {
			get {
				return this.GetList<DocumentApprovalModel>("DocumentApprovalWorkflow");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Documents")]
		public Microsoft.SharePoint.Linq.EntityList<Document> Documents {
			get {
				return this.GetList<Document>("Documents");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Site Pages")]
		public Microsoft.SharePoint.Linq.EntityList<Document> SitePages {
			get {
				return this.GetList<Document>("Site Pages");
			}
		}
		
		/// <summary>
		/// Use the style library to store style sheets, such as CSS or XSL files. The style sheets in this gallery can be used by this site or any of its subsites.
		/// </summary>
		[Microsoft.SharePoint.Linq.ListAttribute(Name="Style Library")]
		public Microsoft.SharePoint.Linq.EntityList<Document> StyleLibrary {
			get {
				return this.GetList<Document>("Style Library");
			}
		}
		
		[Microsoft.SharePoint.Linq.ListAttribute(Name="TimerLists")]
		public Microsoft.SharePoint.Linq.EntityList<Item> TimerLists {
			get {
				return this.GetList<Item>("TimerLists");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DAApprovalHistoryModel))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(Document))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DAReviewerModel))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DAReviewerActionModel))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DefaultReviewer))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DocumentApprovalModel))]
	internal partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging {
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _version;
		
		private string _path;
		
		private Microsoft.SharePoint.Linq.EntityState _entityState;
		
		private System.Collections.Generic.IDictionary<string, object> _originalValues;
		
		private string _title;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState {
			get {
				return this._entityState;
			}
			set {
				if ((value != this._entityState)) {
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues {
			get {
				if ((null == this._originalValues)) {
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}
		
		public Item() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ID", Storage="_id", ReadOnly=true, FieldType="Counter")]
		public System.Nullable<int> Id {
			get {
				return this._id;
			}
			set {
				if ((value != this._id)) {
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="owshiddenversion", Storage="_version", ReadOnly=true, FieldType="Integer")]
		public System.Nullable<int> Version {
			get {
				return this._version;
			}
			set {
				if ((value != this._version)) {
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileDirRef", Storage="_path", ReadOnly=true, FieldType="Lookup", IsLookupValue=true)]
		public string Path {
			get {
				return this._path;
			}
			set {
				if ((value != this._path)) {
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Title", Storage="_title", Required=true, FieldType="Text")]
		public virtual string Title {
			get {
				return this._title;
			}
			set {
				if ((value != this._title)) {
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		protected virtual void OnPropertyChanged(string propertyName) {
			if ((null != this.PropertyChanged)) {
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		protected virtual void OnPropertyChanging(string propertyName, object value) {
			if ((null == this._originalValues)) {
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName))) {
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging)) {
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(DAAttachmentsDocument))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(SitePage))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type=typeof(WikiPage))]
	internal partial class Document : Item {
		
		private string _name;
		
		private string _documentModifiedBy;
		
		private string _documentCreatedBy;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public Document() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileLeafRef", Storage="_name", Required=true, FieldType="File")]
		public string Name {
			get {
				return this._name;
			}
			set {
				if ((value != this._name)) {
					this.OnPropertyChanging("Name", this._name);
					this._name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Modified_x0020_By", Storage="_documentModifiedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentModifiedBy {
			get {
				return this._documentModifiedBy;
			}
			set {
				if ((value != this._documentModifiedBy)) {
					this.OnPropertyChanging("DocumentModifiedBy", this._documentModifiedBy);
					this._documentModifiedBy = value;
					this.OnPropertyChanged("DocumentModifiedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Created_x0020_By", Storage="_documentCreatedBy", ReadOnly=true, FieldType="Text")]
		public string DocumentCreatedBy {
			get {
				return this._documentCreatedBy;
			}
			set {
				if ((value != this._documentCreatedBy)) {
					this.OnPropertyChanging("DocumentCreatedBy", this._documentCreatedBy);
					this._documentCreatedBy = value;
					this.OnPropertyChanged("DocumentCreatedBy");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new wiki page.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Wiki Page", Id="0x010108")]
	internal partial class WikiPage : Document {
		
		private string _wikiContent;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public WikiPage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="WikiField", Storage="_wikiContent", FieldType="Note")]
		public string WikiContent {
			get {
				return this._wikiContent;
			}
			set {
				if ((value != this._wikiContent)) {
					this.OnPropertyChanging("WikiContent", this._wikiContent);
					this._wikiContent = value;
					this.OnPropertyChanged("WikiContent");
				}
			}
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[Microsoft.SharePoint.Linq.RemovedColumnAttribute()]
		public override string Title {
			get {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
			set {
				throw new System.InvalidOperationException("Field Title was removed from content type Wiki Page.");
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="DAApprovalHistory")]
	internal partial class DAApprovalHistoryModel : Item {
		
		private string _reqNo;
		
		private string _approval;
		
		private string _approvalLevel;
		
		private string _approvedBy;
		
		private string _approverID;
		
		private string _approvalDate;
		
		private string _comment;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DAApprovalHistoryModel() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReqNo", Storage="_reqNo", FieldType="Text")]
		public string ReqNo {
			get {
				return this._reqNo;
			}
			set {
				if ((value != this._reqNo)) {
					this.OnPropertyChanging("ReqNo", this._reqNo);
					this._reqNo = value;
					this.OnPropertyChanged("ReqNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Approval", Storage="_approval", FieldType="Text")]
		public string Approval {
			get {
				return this._approval;
			}
			set {
				if ((value != this._approval)) {
					this.OnPropertyChanging("Approval", this._approval);
					this._approval = value;
					this.OnPropertyChanged("Approval");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ApprovalLevel", Storage="_approvalLevel", FieldType="Text")]
		public string ApprovalLevel {
			get {
				return this._approvalLevel;
			}
			set {
				if ((value != this._approvalLevel)) {
					this.OnPropertyChanging("ApprovalLevel", this._approvalLevel);
					this._approvalLevel = value;
					this.OnPropertyChanged("ApprovalLevel");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ApprovedBy", Storage="_approvedBy", FieldType="Text")]
		public string ApprovedBy {
			get {
				return this._approvedBy;
			}
			set {
				if ((value != this._approvedBy)) {
					this.OnPropertyChanging("ApprovedBy", this._approvedBy);
					this._approvedBy = value;
					this.OnPropertyChanged("ApprovedBy");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ApproverID", Storage="_approverID", FieldType="Text")]
		public string ApproverID {
			get {
				return this._approverID;
			}
			set {
				if ((value != this._approverID)) {
					this.OnPropertyChanging("ApproverID", this._approverID);
					this._approverID = value;
					this.OnPropertyChanged("ApproverID");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ApprovalDate", Storage="_approvalDate", FieldType="Text")]
		public string ApprovalDate {
			get {
				return this._approvalDate;
			}
			set {
				if ((value != this._approvalDate)) {
					this.OnPropertyChanging("ApprovalDate", this._approvalDate);
					this._approvalDate = value;
					this.OnPropertyChanged("ApprovalDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_comment", FieldType="Text")]
		public string Comment {
			get {
				return this._comment;
			}
			set {
				if ((value != this._comment)) {
					this.OnPropertyChanging("Comment", this._comment);
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="DAReviewer")]
	internal partial class DAReviewerModel : Item {
		
		private System.Nullable<double> _level;
		
		private string _email;
		
		private System.Nullable<int> _reviewerId;
		
		private string _reviewerImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DAReviewerModel() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Level", Storage="_level", FieldType="Number")]
		public System.Nullable<double> Level {
			get {
				return this._level;
			}
			set {
				if ((value != this._level)) {
					this.OnPropertyChanging("Level", this._level);
					this._level = value;
					this.OnPropertyChanged("Level");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Email", Storage="_email", FieldType="Text")]
		public string Email {
			get {
				return this._email;
			}
			set {
				if ((value != this._email)) {
					this.OnPropertyChanging("Email", this._email);
					this._email = value;
					this.OnPropertyChanged("Email");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Approver", Storage="_reviewerId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ReviewerId {
			get {
				return this._reviewerId;
			}
			set {
				if ((value != this._reviewerId)) {
					this.OnPropertyChanging("ReviewerId", this._reviewerId);
					this._reviewerId = value;
					this.OnPropertyChanged("ReviewerId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Approver", Storage="_reviewerImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ReviewerImnName {
			get {
				return this._reviewerImnName;
			}
			set {
				if ((value != this._reviewerImnName)) {
					this.OnPropertyChanging("ReviewerImnName", this._reviewerImnName);
					this._reviewerImnName = value;
					this.OnPropertyChanged("ReviewerImnName");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="DAReviewerAction")]
	internal partial class DAReviewerActionModel : Item {
		
		private System.Nullable<double> _dAId;
		
		private string _action;
		
		private System.Nullable<System.DateTime> _actionDate;
		
		private string _comment;
		
		private System.Nullable<int> _actionedById;
		
		private string _actionedByImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DAReviewerActionModel() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="DAId", Storage="_dAId", FieldType="Number")]
		public System.Nullable<double> DAId {
			get {
				return this._dAId;
			}
			set {
				if ((value != this._dAId)) {
					this.OnPropertyChanging("DAId", this._dAId);
					this._dAId = value;
					this.OnPropertyChanged("DAId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Action", Storage="_action", FieldType="Text")]
		public string Action {
			get {
				return this._action;
			}
			set {
				if ((value != this._action)) {
					this.OnPropertyChanging("Action", this._action);
					this._action = value;
					this.OnPropertyChanged("Action");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActionDate", Storage="_actionDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate {
			get {
				return this._actionDate;
			}
			set {
				if ((value != this._actionDate)) {
					this.OnPropertyChanging("ActionDate", this._actionDate);
					this._actionDate = value;
					this.OnPropertyChanged("ActionDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_comment", FieldType="Note")]
		public string Comment {
			get {
				return this._comment;
			}
			set {
				if ((value != this._comment)) {
					this.OnPropertyChanging("Comment", this._comment);
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActionBy", Storage="_actionedById", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ActionedById {
			get {
				return this._actionedById;
			}
			set {
				if ((value != this._actionedById)) {
					this.OnPropertyChanging("ActionedById", this._actionedById);
					this._actionedById = value;
					this.OnPropertyChanged("ActionedById");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ActionBy", Storage="_actionedByImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ActionedByImnName {
			get {
				return this._actionedByImnName;
			}
			set {
				if ((value != this._actionedByImnName)) {
					this.OnPropertyChanging("ActionedByImnName", this._actionedByImnName);
					this._actionedByImnName = value;
					this.OnPropertyChanged("ActionedByImnName");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="DefaultReviewer")]
	internal partial class DefaultReviewer : Item {
		
		private string _email;
		
		private System.Nullable<int> _nameId;
		
		private string _nameImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DefaultReviewer() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Email", Storage="_email", Required=true, FieldType="Text")]
		public string Email {
			get {
				return this._email;
			}
			set {
				if ((value != this._email)) {
					this.OnPropertyChanging("Email", this._email);
					this._email = value;
					this.OnPropertyChanged("Email");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Name", Storage="_nameId", Required=true, FieldType="User", IsLookupId=true)]
		public System.Nullable<int> NameId {
			get {
				return this._nameId;
			}
			set {
				if ((value != this._nameId)) {
					this.OnPropertyChanging("NameId", this._nameId);
					this._nameId = value;
					this.OnPropertyChanged("NameId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Name", Storage="_nameImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string NameImnName {
			get {
				return this._nameImnName;
			}
			set {
				if ((value != this._nameImnName)) {
					this.OnPropertyChanging("NameImnName", this._nameImnName);
					this._nameImnName = value;
					this.OnPropertyChanged("NameImnName");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Item", Id="0x01", List="DocumentApprovalWorkflow")]
	internal partial class DocumentApprovalModel : Item {
		
		private string _reqNo;
		
		private System.Nullable<System.DateTime> _requestDate;
		
		private string _requesterName;
		
		private string _requesterEmail;
		
		private string _requesterDepartment;
		
		private string _requesterDesignation;
		
		private string _comment;
		
		private System.Nullable<double> _requestStep;
		
		private string _requestStatus;
		
		private string _approverEmail;
		
		private System.Nullable<System.DateTime> _pendingDate;
		
		private System.Nullable<int> _pendingUserId;
		
		private string _pendingUserImnName;
		
		private System.Nullable<int> _approverId;
		
		private string _approverImnName;
		
		private System.Nullable<int> _requesterId;
		
		private string _requesterImnName;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DocumentApprovalModel() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReqNo", Storage="_reqNo", FieldType="Text")]
		public string ReqNo {
			get {
				return this._reqNo;
			}
			set {
				if ((value != this._reqNo)) {
					this.OnPropertyChanging("ReqNo", this._reqNo);
					this._reqNo = value;
					this.OnPropertyChanged("ReqNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequestDate", Storage="_requestDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate {
			get {
				return this._requestDate;
			}
			set {
				if ((value != this._requestDate)) {
					this.OnPropertyChanging("RequestDate", this._requestDate);
					this._requestDate = value;
					this.OnPropertyChanged("RequestDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequesterName", Storage="_requesterName", FieldType="Text")]
		public string RequesterName {
			get {
				return this._requesterName;
			}
			set {
				if ((value != this._requesterName)) {
					this.OnPropertyChanging("RequesterName", this._requesterName);
					this._requesterName = value;
					this.OnPropertyChanged("RequesterName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequesterEmail", Storage="_requesterEmail", FieldType="Text")]
		public string RequesterEmail {
			get {
				return this._requesterEmail;
			}
			set {
				if ((value != this._requesterEmail)) {
					this.OnPropertyChanging("RequesterEmail", this._requesterEmail);
					this._requesterEmail = value;
					this.OnPropertyChanged("RequesterEmail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequesterDepartment", Storage="_requesterDepartment", FieldType="Text")]
		public string RequesterDepartment {
			get {
				return this._requesterDepartment;
			}
			set {
				if ((value != this._requesterDepartment)) {
					this.OnPropertyChanging("RequesterDepartment", this._requesterDepartment);
					this._requesterDepartment = value;
					this.OnPropertyChanged("RequesterDepartment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequesterDesignation", Storage="_requesterDesignation", FieldType="Text")]
		public string RequesterDesignation {
			get {
				return this._requesterDesignation;
			}
			set {
				if ((value != this._requesterDesignation)) {
					this.OnPropertyChanging("RequesterDesignation", this._requesterDesignation);
					this._requesterDesignation = value;
					this.OnPropertyChanged("RequesterDesignation");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Comment", Storage="_comment", FieldType="Note")]
		public string Comment {
			get {
				return this._comment;
			}
			set {
				if ((value != this._comment)) {
					this.OnPropertyChanging("Comment", this._comment);
					this._comment = value;
					this.OnPropertyChanged("Comment");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequestStep", Storage="_requestStep", FieldType="Number")]
		public System.Nullable<double> RequestStep {
			get {
				return this._requestStep;
			}
			set {
				if ((value != this._requestStep)) {
					this.OnPropertyChanging("RequestStep", this._requestStep);
					this._requestStep = value;
					this.OnPropertyChanged("RequestStep");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="RequestStatus", Storage="_requestStatus", FieldType="Text")]
		public string RequestStatus {
			get {
				return this._requestStatus;
			}
			set {
				if ((value != this._requestStatus)) {
					this.OnPropertyChanging("RequestStatus", this._requestStatus);
					this._requestStatus = value;
					this.OnPropertyChanged("RequestStatus");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ApproverEmail", Storage="_approverEmail", FieldType="Text")]
		public string ApproverEmail {
			get {
				return this._approverEmail;
			}
			set {
				if ((value != this._approverEmail)) {
					this.OnPropertyChanging("ApproverEmail", this._approverEmail);
					this._approverEmail = value;
					this.OnPropertyChanged("ApproverEmail");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PendingDate", Storage="_pendingDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> PendingDate {
			get {
				return this._pendingDate;
			}
			set {
				if ((value != this._pendingDate)) {
					this.OnPropertyChanging("PendingDate", this._pendingDate);
					this._pendingDate = value;
					this.OnPropertyChanged("PendingDate");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PendingUser", Storage="_pendingUserId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> PendingUserId {
			get {
				return this._pendingUserId;
			}
			set {
				if ((value != this._pendingUserId)) {
					this.OnPropertyChanging("PendingUserId", this._pendingUserId);
					this._pendingUserId = value;
					this.OnPropertyChanged("PendingUserId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PendingUser", Storage="_pendingUserImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string PendingUserImnName {
			get {
				return this._pendingUserImnName;
			}
			set {
				if ((value != this._pendingUserImnName)) {
					this.OnPropertyChanging("PendingUserImnName", this._pendingUserImnName);
					this._pendingUserImnName = value;
					this.OnPropertyChanged("PendingUserImnName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Approver", Storage="_approverId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> ApproverId {
			get {
				return this._approverId;
			}
			set {
				if ((value != this._approverId)) {
					this.OnPropertyChanging("ApproverId", this._approverId);
					this._approverId = value;
					this.OnPropertyChanged("ApproverId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Approver", Storage="_approverImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string ApproverImnName {
			get {
				return this._approverImnName;
			}
			set {
				if ((value != this._approverImnName)) {
					this.OnPropertyChanging("ApproverImnName", this._approverImnName);
					this._approverImnName = value;
					this.OnPropertyChanged("ApproverImnName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Requester", Storage="_requesterId", FieldType="User", IsLookupId=true)]
		public System.Nullable<int> RequesterId {
			get {
				return this._requesterId;
			}
			set {
				if ((value != this._requesterId)) {
					this.OnPropertyChanging("RequesterId", this._requesterId);
					this._requesterId = value;
					this.OnPropertyChanged("RequesterId");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Requester", Storage="_requesterImnName", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public string RequesterImnName {
			get {
				return this._requesterImnName;
			}
			set {
				if ((value != this._requesterImnName)) {
					this.OnPropertyChanging("RequesterImnName", this._requesterImnName);
					this._requesterImnName = value;
					this.OnPropertyChanged("RequesterImnName");
				}
			}
		}
	}
	
	/// <summary>
	/// Create a new document.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Document", Id="0x0101", List="DAAttachments")]
	internal partial class DAAttachmentsDocument : Document {
		
		private string _reqNo;
		
		private string _fileName;
		
		private Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>> _sharedWithId;
		
		private Microsoft.SharePoint.Linq.LookupList<string> _sharedWith;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public DAAttachmentsDocument() {
			this._sharedWithId = new Microsoft.SharePoint.Linq.LookupList<System.Nullable<int>>();
			this._sharedWithId.OnChanged += new System.EventHandler(this.OnSharedWithIdChanged);
			this._sharedWithId.OnChanging += new System.EventHandler(this.OnSharedWithIdChanging);
			this._sharedWith = new Microsoft.SharePoint.Linq.LookupList<string>();
			this._sharedWith.OnChanged += new System.EventHandler(this.OnSharedWithChanged);
			this._sharedWith.OnChanging += new System.EventHandler(this.OnSharedWithChanging);
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="ReqNo", Storage="_reqNo", FieldType="Text")]
		public string ReqNo {
			get {
				return this._reqNo;
			}
			set {
				if ((value != this._reqNo)) {
					this.OnPropertyChanging("ReqNo", this._reqNo);
					this._reqNo = value;
					this.OnPropertyChanged("ReqNo");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FileName", Storage="_fileName", FieldType="Text")]
		public string FileName {
			get {
				return this._fileName;
			}
			set {
				if ((value != this._fileName)) {
					this.OnPropertyChanging("FileName", this._fileName);
					this._fileName = value;
					this.OnPropertyChanged("FileName");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SharedWithUsers", Storage="_sharedWithId", ReadOnly=true, FieldType="User", IsLookupId=true)]
		public System.Collections.Generic.IList<System.Nullable<int>> SharedWithId {
			get {
				return this._sharedWithId;
			}
			set {
				this._sharedWithId.Assign(value);
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="SharedWithUsers", Storage="_sharedWith", ReadOnly=true, FieldType="User", IsLookupValue=true)]
		public System.Collections.Generic.IList<string> SharedWith {
			get {
				return this._sharedWith;
			}
			set {
				this._sharedWith.Assign(value);
			}
		}
		
		private void OnSharedWithIdChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SharedWithId", this._sharedWithId.Clone());
		}
		
		private void OnSharedWithIdChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SharedWithId");
		}
		
		private void OnSharedWithChanging(object sender, System.EventArgs e) {
			this.OnPropertyChanging("SharedWith", this._sharedWith.Clone());
		}
		
		private void OnSharedWithChanged(object sender, System.EventArgs e) {
			this.OnPropertyChanged("SharedWith");
		}
	}
	
	/// <summary>
	/// Create a new site page.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name="Site Page", Id="0x0101009D1CB255DA76424F860D91F20E6C4118")]
	internal partial class SitePage : Document {
		
		private string _title0;
		
		private string _bannerImageURL;
		
		private string _description;
		
		private System.Nullable<double> _promotedState;
		
		private System.Nullable<System.DateTime> _firstPublishedDate;
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion
		
		public SitePage() {
			this.OnCreated();
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="LinkTitle", Storage="_title0", ReadOnly=true, FieldType="Computed")]
		public string Title0 {
			get {
				return this._title0;
			}
			set {
				if ((value != this._title0)) {
					this.OnPropertyChanging("Title0", this._title0);
					this._title0 = value;
					this.OnPropertyChanged("Title0");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="BannerImageUrl", Storage="_bannerImageURL", FieldType="Url")]
		public string BannerImageURL {
			get {
				return this._bannerImageURL;
			}
			set {
				if ((value != this._bannerImageURL)) {
					this.OnPropertyChanging("BannerImageURL", this._bannerImageURL);
					this._bannerImageURL = value;
					this.OnPropertyChanged("BannerImageURL");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="Description", Storage="_description", ReadOnly=true, FieldType="Note")]
		public string Description {
			get {
				return this._description;
			}
			set {
				if ((value != this._description)) {
					this.OnPropertyChanging("Description", this._description);
					this._description = value;
					this.OnPropertyChanged("Description");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="PromotedState", Storage="_promotedState", FieldType="Number")]
		public System.Nullable<double> PromotedState {
			get {
				return this._promotedState;
			}
			set {
				if ((value != this._promotedState)) {
					this.OnPropertyChanging("PromotedState", this._promotedState);
					this._promotedState = value;
					this.OnPropertyChanged("PromotedState");
				}
			}
		}
		
		[Microsoft.SharePoint.Linq.ColumnAttribute(Name="FirstPublishedDate", Storage="_firstPublishedDate", FieldType="DateTime")]
		public System.Nullable<System.DateTime> FirstPublishedDate {
			get {
				return this._firstPublishedDate;
			}
			set {
				if ((value != this._firstPublishedDate)) {
					this.OnPropertyChanging("FirstPublishedDate", this._firstPublishedDate);
					this._firstPublishedDate = value;
					this.OnPropertyChanged("FirstPublishedDate");
				}
			}
		}
	}
}
