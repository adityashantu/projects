//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeaveManagementCPTU.CONTROLTEMPLATES.LeaveManagementCPTU
{
	using System;


	internal partial class LeaveManagementCPTUDataContext : Microsoft.SharePoint.Linq.DataContext
	{

		#region Extensibility Method Definitions
		partial void OnCreated();
		#endregion

		public LeaveManagementCPTUDataContext(string requestUrl) :
				base(requestUrl)
		{
			this.OnCreated();
		}

		[Microsoft.SharePoint.Linq.ListAttribute(Name = "LMAdmin")]
		public Microsoft.SharePoint.Linq.EntityList<LMAdmins> LMAdmin
		{
			get
			{
				return this.GetList<LMAdmins>("LMAdmin");
			}
		}

		[Microsoft.SharePoint.Linq.ListAttribute(Name = "LMEmployeeLeavesMain")]
		public Microsoft.SharePoint.Linq.EntityList<LMEmployeeLeavesMains> LMEmployeeLeavesMain
		{
			get
			{
				return this.GetList<LMEmployeeLeavesMains>("LMEmployeeLeavesMain");
			}
		}

		[Microsoft.SharePoint.Linq.ListAttribute(Name = "LMLeave")]
		public Microsoft.SharePoint.Linq.EntityList<LMLeaves> LMLeave
		{
			get
			{
				return this.GetList<LMLeaves>("LMLeave");
			}
		}

		[Microsoft.SharePoint.Linq.ListAttribute(Name = "LMLeaveRequest")]
		public Microsoft.SharePoint.Linq.EntityList<LMLeavesRequests> LMLeaveRequest
		{
			get
			{
				return this.GetList<LMLeavesRequests>("LMLeaveRequest");
			}
		}
	}

	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01")]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(LMAdmins))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(LMEmployeeLeavesMains))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(LMLeaves))]
	[Microsoft.SharePoint.Linq.DerivedEntityClassAttribute(Type = typeof(LMLeavesRequests))]
	internal partial class Item : Microsoft.SharePoint.Linq.ITrackEntityState, Microsoft.SharePoint.Linq.ITrackOriginalValues, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging
	{

		private System.Nullable<int> _id;

		private System.Nullable<int> _version;

		private string _path;

		private Microsoft.SharePoint.Linq.EntityState _entityState;

		private System.Collections.Generic.IDictionary<string, object> _originalValues;

		private string _title;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		Microsoft.SharePoint.Linq.EntityState Microsoft.SharePoint.Linq.ITrackEntityState.EntityState
		{
			get
			{
				return this._entityState;
			}
			set
			{
				if ((value != this._entityState))
				{
					this._entityState = value;
				}
			}
		}

		System.Collections.Generic.IDictionary<string, object> Microsoft.SharePoint.Linq.ITrackOriginalValues.OriginalValues
		{
			get
			{
				if ((null == this._originalValues))
				{
					this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
				}
				return this._originalValues;
			}
		}

		public Item()
		{
			this.OnCreated();
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ID", Storage = "_id", ReadOnly = true, FieldType = "Counter")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((value != this._id))
				{
					this.OnPropertyChanging("Id", this._id);
					this._id = value;
					this.OnPropertyChanged("Id");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "owshiddenversion", Storage = "_version", ReadOnly = true, FieldType = "Integer")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((value != this._version))
				{
					this.OnPropertyChanging("Version", this._version);
					this._version = value;
					this.OnPropertyChanged("Version");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "FileDirRef", Storage = "_path", ReadOnly = true, FieldType = "Lookup", IsLookupValue = true)]
		public string Path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((value != this._path))
				{
					this.OnPropertyChanging("Path", this._path);
					this._path = value;
					this.OnPropertyChanged("Path");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Title", Storage = "_title", Required = true, FieldType = "Text")]
		public virtual string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((value != this._title))
				{
					this.OnPropertyChanging("Title", this._title);
					this._title = value;
					this.OnPropertyChanged("Title");
				}
			}
		}

		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if ((null != this.PropertyChanged))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		protected virtual void OnPropertyChanging(string propertyName, object value)
		{
			if ((null == this._originalValues))
			{
				this._originalValues = new System.Collections.Generic.Dictionary<string, object>();
			}
			if ((false == this._originalValues.ContainsKey(propertyName)))
			{
				this._originalValues.Add(propertyName, value);
			}
			if ((null != this.PropertyChanging))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
	}

	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "LMAdmin")]
	internal partial class LMAdmins : Item
	{

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		public LMAdmins()
		{
			this.OnCreated();
		}
	}

	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "LMEmployeeLeavesMain")]
	internal partial class LMEmployeeLeavesMains : Item
	{

		private string _employeeName;

		private System.Nullable<double> _casualTotalLeave;

		private System.Nullable<double> _casualLeaveTaken;

		private System.Nullable<double> _casualLeaveRemaining;

		private System.Nullable<double> _medicalTotalLeave;

		private System.Nullable<double> _medicalLeaveTaken;

		private System.Nullable<double> _medicalLeaveRemaining;

		private System.Nullable<double> _leaveWithoutPay;

		private System.Nullable<double> _specialLeave;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		public LMEmployeeLeavesMains()
		{
			this.OnCreated();
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "EmployeeName", Storage = "_employeeName", Required = true, FieldType = "Text")]
		public string EmployeeName
		{
			get
			{
				return this._employeeName;
			}
			set
			{
				if ((value != this._employeeName))
				{
					this.OnPropertyChanging("EmployeeName", this._employeeName);
					this._employeeName = value;
					this.OnPropertyChanged("EmployeeName");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CasualTotalLeave", Storage = "_casualTotalLeave", Required = true, FieldType = "Number")]
		public System.Nullable<double> CasualTotalLeave
		{
			get
			{
				return this._casualTotalLeave;
			}
			set
			{
				if ((value != this._casualTotalLeave))
				{
					this.OnPropertyChanging("CasualTotalLeave", this._casualTotalLeave);
					this._casualTotalLeave = value;
					this.OnPropertyChanged("CasualTotalLeave");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CasualLeaveTaken", Storage = "_casualLeaveTaken", Required = true, FieldType = "Number")]
		public System.Nullable<double> CasualLeaveTaken
		{
			get
			{
				return this._casualLeaveTaken;
			}
			set
			{
				if ((value != this._casualLeaveTaken))
				{
					this.OnPropertyChanging("CasualLeaveTaken", this._casualLeaveTaken);
					this._casualLeaveTaken = value;
					this.OnPropertyChanged("CasualLeaveTaken");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "CasualLeaveRemaining", Storage = "_casualLeaveRemaining", ReadOnly = true, IsCalculated = true, FieldType = "Number")]
		public System.Nullable<double> CasualLeaveRemaining
		{
			get
			{
				return this._casualLeaveRemaining;
			}
			set
			{
				if ((value != this._casualLeaveRemaining))
				{
					this.OnPropertyChanging("CasualLeaveRemaining", this._casualLeaveRemaining);
					this._casualLeaveRemaining = value;
					this.OnPropertyChanged("CasualLeaveRemaining");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MedicalTotalLeave", Storage = "_medicalTotalLeave", Required = true, FieldType = "Number")]
		public System.Nullable<double> MedicalTotalLeave
		{
			get
			{
				return this._medicalTotalLeave;
			}
			set
			{
				if ((value != this._medicalTotalLeave))
				{
					this.OnPropertyChanging("MedicalTotalLeave", this._medicalTotalLeave);
					this._medicalTotalLeave = value;
					this.OnPropertyChanged("MedicalTotalLeave");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MedicallLeaveRemaining", Storage = "_medicalLeaveTaken", Required = true, FieldType = "Number")]
		public System.Nullable<double> MedicalLeaveTaken
		{
			get
			{
				return this._medicalLeaveTaken;
			}
			set
			{
				if ((value != this._medicalLeaveTaken))
				{
					this.OnPropertyChanging("MedicalLeaveTaken", this._medicalLeaveTaken);
					this._medicalLeaveTaken = value;
					this.OnPropertyChanged("MedicalLeaveTaken");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "MedicallLeaveRemaining0", Storage = "_medicalLeaveRemaining", ReadOnly = true, IsCalculated = true, FieldType = "Number")]
		public System.Nullable<double> MedicalLeaveRemaining
		{
			get
			{
				return this._medicalLeaveRemaining;
			}
			set
			{
				if ((value != this._medicalLeaveRemaining))
				{
					this.OnPropertyChanging("MedicalLeaveRemaining", this._medicalLeaveRemaining);
					this._medicalLeaveRemaining = value;
					this.OnPropertyChanged("MedicalLeaveRemaining");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "LeaveWithoutPay", Storage = "_leaveWithoutPay", Required = true, FieldType = "Number")]
		public System.Nullable<double> LeaveWithoutPay
		{
			get
			{
				return this._leaveWithoutPay;
			}
			set
			{
				if ((value != this._leaveWithoutPay))
				{
					this.OnPropertyChanging("LeaveWithoutPay", this._leaveWithoutPay);
					this._leaveWithoutPay = value;
					this.OnPropertyChanged("LeaveWithoutPay");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "SpecialLeave", Storage = "_specialLeave", Required = true, FieldType = "Number")]
		public System.Nullable<double> SpecialLeave
		{
			get
			{
				return this._specialLeave;
			}
			set
			{
				if ((value != this._specialLeave))
				{
					this.OnPropertyChanging("SpecialLeave", this._specialLeave);
					this._specialLeave = value;
					this.OnPropertyChanged("SpecialLeave");
				}
			}
		}
	}

	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "LMLeave")]
	internal partial class LMLeaves : Item
	{

		private System.Nullable<double> _days;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		public LMLeaves()
		{
			this.OnCreated();
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Days", Storage = "_days", Required = true, FieldType = "Number")]
		public System.Nullable<double> Days
		{
			get
			{
				return this._days;
			}
			set
			{
				if ((value != this._days))
				{
					this.OnPropertyChanging("Days", this._days);
					this._days = value;
					this.OnPropertyChanged("Days");
				}
			}
		}
	}

	/// <summary>
	/// Create a new list item.
	/// </summary>
	[Microsoft.SharePoint.Linq.ContentTypeAttribute(Name = "Item", Id = "0x01", List = "LMLeaveRequest")]
	internal partial class LMLeavesRequests : Item
	{

		private string _requesterName;

		private string _requesterDepartment;

		private string _requesterDesignation;

		private System.Nullable<System.DateTime> _dateRequested;

		private System.Nullable<System.DateTime> _dateFrom;

		private System.Nullable<System.DateTime> _dateTo;

		private System.Nullable<double> _dayDifference;

		private string _leaveType;

		private string _reason;

		private string _approver;

		private string _approverMail;

		private string _leaveStatus;

		private string _managerComment;

		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate();
		partial void OnCreated();
		#endregion

		public LMLeavesRequests()
		{
			this.OnCreated();
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "RequesterName", Storage = "_requesterName", Required = true, FieldType = "Text")]
		public string RequesterName
		{
			get
			{
				return this._requesterName;
			}
			set
			{
				if ((value != this._requesterName))
				{
					this.OnPropertyChanging("RequesterName", this._requesterName);
					this._requesterName = value;
					this.OnPropertyChanged("RequesterName");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "RequesterDepartment", Storage = "_requesterDepartment", Required = true, FieldType = "Text")]
		public string RequesterDepartment
		{
			get
			{
				return this._requesterDepartment;
			}
			set
			{
				if ((value != this._requesterDepartment))
				{
					this.OnPropertyChanging("RequesterDepartment", this._requesterDepartment);
					this._requesterDepartment = value;
					this.OnPropertyChanged("RequesterDepartment");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "RequesterDesignation", Storage = "_requesterDesignation", Required = true, FieldType = "Text")]
		public string RequesterDesignation
		{
			get
			{
				return this._requesterDesignation;
			}
			set
			{
				if ((value != this._requesterDesignation))
				{
					this.OnPropertyChanging("RequesterDesignation", this._requesterDesignation);
					this._requesterDesignation = value;
					this.OnPropertyChanged("RequesterDesignation");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DateRequested", Storage = "_dateRequested", Required = true, FieldType = "DateTime")]
		public System.Nullable<System.DateTime> DateRequested
		{
			get
			{
				return this._dateRequested;
			}
			set
			{
				if ((value != this._dateRequested))
				{
					this.OnPropertyChanging("DateRequested", this._dateRequested);
					this._dateRequested = value;
					this.OnPropertyChanged("DateRequested");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DateFrom", Storage = "_dateFrom", Required = true, FieldType = "DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._dateFrom;
			}
			set
			{
				if ((value != this._dateFrom))
				{
					this.OnPropertyChanging("DateFrom", this._dateFrom);
					this._dateFrom = value;
					this.OnPropertyChanged("DateFrom");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DateTo", Storage = "_dateTo", Required = true, FieldType = "DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._dateTo;
			}
			set
			{
				if ((value != this._dateTo))
				{
					this.OnPropertyChanging("DateTo", this._dateTo);
					this._dateTo = value;
					this.OnPropertyChanged("DateTo");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "DayDifference", Storage = "_dayDifference", Required = true, FieldType = "Number")]
		public System.Nullable<double> DayDifference
		{
			get
			{
				return this._dayDifference;
			}
			set
			{
				if ((value != this._dayDifference))
				{
					this.OnPropertyChanging("DayDifference", this._dayDifference);
					this._dayDifference = value;
					this.OnPropertyChanged("DayDifference");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "LeaveType", Storage = "_leaveType", Required = true, FieldType = "Text")]
		public string LeaveType
		{
			get
			{
				return this._leaveType;
			}
			set
			{
				if ((value != this._leaveType))
				{
					this.OnPropertyChanging("LeaveType", this._leaveType);
					this._leaveType = value;
					this.OnPropertyChanged("LeaveType");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Reason", Storage = "_reason", Required = true, FieldType = "Note")]
		public string Reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((value != this._reason))
				{
					this.OnPropertyChanging("Reason", this._reason);
					this._reason = value;
					this.OnPropertyChanged("Reason");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "Approver", Storage = "_approver", Required = true, FieldType = "Text")]
		public string Approver
		{
			get
			{
				return this._approver;
			}
			set
			{
				if ((value != this._approver))
				{
					this.OnPropertyChanging("Approver", this._approver);
					this._approver = value;
					this.OnPropertyChanged("Approver");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ApproverMail", Storage = "_approverMail", Required = true, FieldType = "Text")]
		public string ApproverMail
		{
			get
			{
				return this._approverMail;
			}
			set
			{
				if ((value != this._approverMail))
				{
					this.OnPropertyChanging("ApproverMail", this._approverMail);
					this._approverMail = value;
					this.OnPropertyChanged("ApproverMail");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "LeaveStatus", Storage = "_leaveStatus", Required = true, FieldType = "Text")]
		public string LeaveStatus
		{
			get
			{
				return this._leaveStatus;
			}
			set
			{
				if ((value != this._leaveStatus))
				{
					this.OnPropertyChanging("LeaveStatus", this._leaveStatus);
					this._leaveStatus = value;
					this.OnPropertyChanged("LeaveStatus");
				}
			}
		}

		[Microsoft.SharePoint.Linq.ColumnAttribute(Name = "ManagerComment", Storage = "_managerComment", FieldType = "Note")]
		public string ManagerComment
		{
			get
			{
				return this._managerComment;
			}
			set
			{
				if ((value != this._managerComment))
				{
					this.OnPropertyChanging("ManagerComment", this._managerComment);
					this._managerComment = value;
					this.OnPropertyChanged("ManagerComment");
				}
			}
		}
	}
}
